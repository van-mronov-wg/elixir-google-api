# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Admin.Reports_v1.Model.Activity do
  @moduledoc """
  JSON template for the activity resource.

  ## Attributes

  - actor (ActivityActor):  Defaults to: `null`.
  - etag (String.t): ETag of the entry. Defaults to: `null`.
  - events ([ActivityEvents]): Activity events. Defaults to: `null`.
  - id (ActivityId):  Defaults to: `null`.
  - ipAddress (String.t): IP Address of the user doing the action. Defaults to: `null`.
  - kind (String.t): Kind of resource this is. Defaults to: `null`.
  - ownerDomain (String.t): Domain of source customer. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          actor: GoogleApi.Admin.Reports_v1.Model.ActivityActor.t(),
          etag: any(),
          events: list(GoogleApi.Admin.Reports_v1.Model.ActivityEvents.t()),
          id: GoogleApi.Admin.Reports_v1.Model.ActivityId.t(),
          ipAddress: any(),
          kind: any(),
          ownerDomain: any()
        }

  defstruct [
    :actor,
    :etag,
    :events,
    :id,
    :ipAddress,
    :kind,
    :ownerDomain
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Admin.Reports_v1.Model.Activity do
  import GoogleApi.Admin.Reports_v1.Deserializer

  def decode(value, options) do
    value
    |> deserialize(:actor, :struct, GoogleApi.Admin.Reports_v1.Model.ActivityActor, options)
    |> deserialize(:events, :list, GoogleApi.Admin.Reports_v1.Model.ActivityEvents, options)
    |> deserialize(:id, :struct, GoogleApi.Admin.Reports_v1.Model.ActivityId, options)
  end
end

defimpl Poison.Encoder, for: GoogleApi.Admin.Reports_v1.Model.Activity do
  def encode(value, options) do
    GoogleApi.Admin.Reports_v1.Deserializer.serialize_non_nil(value, options)
  end
end
