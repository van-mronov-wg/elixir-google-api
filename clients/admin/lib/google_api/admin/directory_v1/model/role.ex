# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.Admin.Directory_v1.Model.Role do
  @moduledoc """
  JSON template for role resource in Directory API.

  ## Attributes

  - etag (String.t): ETag of the resource. Defaults to: `null`.
  - isSuperAdminRole (boolean()): Returns true if the role is a super admin role. Defaults to: `null`.
  - isSystemRole (boolean()): Returns true if this is a pre-defined system role. Defaults to: `null`.
  - kind (String.t): The type of the API resource. This is always admin#directory#role. Defaults to: `null`.
  - roleDescription (String.t): A short description of the role. Defaults to: `null`.
  - roleId (String.t): ID of the role. Defaults to: `null`.
  - roleName (String.t): Name of the role. Defaults to: `null`.
  - rolePrivileges ([RoleRolePrivileges]): The set of privileges that are granted to this role. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          etag: any(),
          isSuperAdminRole: any(),
          isSystemRole: any(),
          kind: any(),
          roleDescription: any(),
          roleId: any(),
          roleName: any(),
          rolePrivileges: list(GoogleApi.Admin.Directory_v1.Model.RoleRolePrivileges.t())
        }

  defstruct [
    :etag,
    :isSuperAdminRole,
    :isSystemRole,
    :kind,
    :roleDescription,
    :roleId,
    :roleName,
    :rolePrivileges
  ]
end

defimpl Poison.Decoder, for: GoogleApi.Admin.Directory_v1.Model.Role do
  import GoogleApi.Admin.Directory_v1.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :rolePrivileges,
      :list,
      GoogleApi.Admin.Directory_v1.Model.RoleRolePrivileges,
      options
    )
  end
end

defimpl Poison.Encoder, for: GoogleApi.Admin.Directory_v1.Model.Role do
  def encode(value, options) do
    GoogleApi.Admin.Directory_v1.Deserializer.serialize_non_nil(value, options)
  end
end
