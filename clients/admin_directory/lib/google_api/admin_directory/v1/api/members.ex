# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdminDirectory.V1.Api.Members do
  @moduledoc """
  API calls for all endpoints tagged `Members`.
  """

  alias GoogleApi.AdminDirectory.V1.Connection
  import GoogleApi.AdminDirectory.V1.RequestBuilder

  @doc """
  Remove membership.

  ## Parameters

  - connection (GoogleApi.AdminDirectory.V1.Connection): Connection to server
  - group_key (String.t): Email or immutable ID of the group
  - member_key (String.t): Email or immutable ID of the member
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %{}} on success
  {:error, info} on failure
  """
  @spec directory_members_delete(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, nil} | {:error, Tesla.Env.t()}
  def directory_members_delete(connection, group_key, member_key, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    %{}
    |> method(:delete)
    |> url("/groups/{groupKey}/members/{memberKey}", %{
      "groupKey" => URI.encode_www_form(group_key),
      "memberKey" => URI.encode_www_form(member_key)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(false)
  end

  @doc """
  Retrieve Group Member

  ## Parameters

  - connection (GoogleApi.AdminDirectory.V1.Connection): Connection to server
  - group_key (String.t): Email or immutable ID of the group
  - member_key (String.t): Email or immutable ID of the member
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AdminDirectory.V1.Model.Member{}} on success
  {:error, info} on failure
  """
  @spec directory_members_get(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdminDirectory.V1.Model.Member.t()} | {:error, Tesla.Env.t()}
  def directory_members_get(connection, group_key, member_key, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    %{}
    |> method(:get)
    |> url("/groups/{groupKey}/members/{memberKey}", %{
      "groupKey" => URI.encode_www_form(group_key),
      "memberKey" => URI.encode_www_form(member_key)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdminDirectory.V1.Model.Member{})
  end

  @doc """
  Checks whether the given user is a member of the group. Membership can be direct or nested.

  ## Parameters

  - connection (GoogleApi.AdminDirectory.V1.Connection): Connection to server
  - group_key (String.t): Identifies the group in the API request. The value can be the group&#39;s email address, group alias, or the unique group ID.
  - member_key (String.t): Identifies the user member in the API request. The value can be the user&#39;s primary email address, alias, or unique ID.
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.

  ## Returns

  {:ok, %GoogleApi.AdminDirectory.V1.Model.MembersHasMember{}} on success
  {:error, info} on failure
  """
  @spec directory_members_has_member(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdminDirectory.V1.Model.MembersHasMember.t()} | {:error, Tesla.Env.t()}
  def directory_members_has_member(connection, group_key, member_key, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query
    }

    %{}
    |> method(:get)
    |> url("/groups/{groupKey}/hasMember/{memberKey}", %{
      "groupKey" => URI.encode_www_form(group_key),
      "memberKey" => URI.encode_www_form(member_key)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdminDirectory.V1.Model.MembersHasMember{})
  end

  @doc """
  Add user to the specified group.

  ## Parameters

  - connection (GoogleApi.AdminDirectory.V1.Connection): Connection to server
  - group_key (String.t): Email or immutable ID of the group
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Member): 

  ## Returns

  {:ok, %GoogleApi.AdminDirectory.V1.Model.Member{}} on success
  {:error, info} on failure
  """
  @spec directory_members_insert(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdminDirectory.V1.Model.Member.t()} | {:error, Tesla.Env.t()}
  def directory_members_insert(connection, group_key, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    %{}
    |> method(:post)
    |> url("/groups/{groupKey}/members", %{
      "groupKey" => URI.encode_www_form(group_key)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdminDirectory.V1.Model.Member{})
  end

  @doc """
  Retrieve all members in a group (paginated)

  ## Parameters

  - connection (GoogleApi.AdminDirectory.V1.Connection): Connection to server
  - group_key (String.t): Email or immutable ID of the group
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :includeDerivedMembership (boolean()): Whether to list indirect memberships. Default: false.
    - :maxResults (integer()): Maximum number of results to return. Default is 200
    - :pageToken (String.t): Token to specify next page in the list
    - :roles (String.t): Comma separated role values to filter list results on.

  ## Returns

  {:ok, %GoogleApi.AdminDirectory.V1.Model.Members{}} on success
  {:error, info} on failure
  """
  @spec directory_members_list(Tesla.Env.client(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdminDirectory.V1.Model.Members.t()} | {:error, Tesla.Env.t()}
  def directory_members_list(connection, group_key, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :includeDerivedMembership => :query,
      :maxResults => :query,
      :pageToken => :query,
      :roles => :query
    }

    %{}
    |> method(:get)
    |> url("/groups/{groupKey}/members", %{
      "groupKey" => URI.encode_www_form(group_key)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdminDirectory.V1.Model.Members{})
  end

  @doc """
  Update membership of a user in the specified group. This method supports patch semantics.

  ## Parameters

  - connection (GoogleApi.AdminDirectory.V1.Connection): Connection to server
  - group_key (String.t): Email or immutable ID of the group. If ID, it should match with id of group object
  - member_key (String.t): Email or immutable ID of the user. If ID, it should match with id of member object
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Member): 

  ## Returns

  {:ok, %GoogleApi.AdminDirectory.V1.Model.Member{}} on success
  {:error, info} on failure
  """
  @spec directory_members_patch(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdminDirectory.V1.Model.Member.t()} | {:error, Tesla.Env.t()}
  def directory_members_patch(connection, group_key, member_key, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    %{}
    |> method(:patch)
    |> url("/groups/{groupKey}/members/{memberKey}", %{
      "groupKey" => URI.encode_www_form(group_key),
      "memberKey" => URI.encode_www_form(member_key)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdminDirectory.V1.Model.Member{})
  end

  @doc """
  Update membership of a user in the specified group.

  ## Parameters

  - connection (GoogleApi.AdminDirectory.V1.Connection): Connection to server
  - group_key (String.t): Email or immutable ID of the group. If ID, it should match with id of group object
  - member_key (String.t): Email or immutable ID of the user. If ID, it should match with id of member object
  - opts (KeywordList): [optional] Optional parameters
    - :alt (String.t): Data format for the response.
    - :fields (String.t): Selector specifying which fields to include in a partial response.
    - :key (String.t): API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.
    - :oauth_token (String.t): OAuth 2.0 token for the current user.
    - :prettyPrint (boolean()): Returns response with indentations and line breaks.
    - :quotaUser (String.t): An opaque string that represents a user for quota purposes. Must not exceed 40 characters.
    - :userIp (String.t): Deprecated. Please use quotaUser instead.
    - :body (Member): 

  ## Returns

  {:ok, %GoogleApi.AdminDirectory.V1.Model.Member{}} on success
  {:error, info} on failure
  """
  @spec directory_members_update(Tesla.Env.client(), String.t(), String.t(), keyword()) ::
          {:ok, GoogleApi.AdminDirectory.V1.Model.Member.t()} | {:error, Tesla.Env.t()}
  def directory_members_update(connection, group_key, member_key, opts \\ []) do
    optional_params = %{
      :alt => :query,
      :fields => :query,
      :key => :query,
      :oauth_token => :query,
      :prettyPrint => :query,
      :quotaUser => :query,
      :userIp => :query,
      :body => :body
    }

    %{}
    |> method(:put)
    |> url("/groups/{groupKey}/members/{memberKey}", %{
      "groupKey" => URI.encode_www_form(group_key),
      "memberKey" => URI.encode_www_form(member_key)
    })
    |> add_optional_params(optional_params, opts)
    |> Enum.into([])
    |> (&Connection.request(connection, &1)).()
    |> decode(%GoogleApi.AdminDirectory.V1.Model.Member{})
  end
end
