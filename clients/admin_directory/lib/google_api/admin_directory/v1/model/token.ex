# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdminDirectory.V1.Model.Token do
  @moduledoc """
  JSON template for token resource in Directory API.

  ## Attributes

  - anonymous (boolean()): Whether the application is registered with Google. The value is true if the application has an anonymous Client ID. Defaults to: `null`.
  - clientId (String.t): The Client ID of the application the token is issued to. Defaults to: `null`.
  - displayText (String.t): The displayable name of the application the token is issued to. Defaults to: `null`.
  - etag (String.t): ETag of the resource. Defaults to: `null`.
  - kind (String.t): The type of the API resource. This is always admin#directory#token. Defaults to: `null`.
  - nativeApp (boolean()): Whether the token is issued to an installed application. The value is true if the application is installed to a desktop or mobile device. Defaults to: `null`.
  - scopes ([String.t]): A list of authorization scopes the application is granted. Defaults to: `null`.
  - userKey (String.t): The unique ID of the user that issued the token. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          anonymous: any(),
          clientId: any(),
          displayText: any(),
          etag: any(),
          kind: any(),
          nativeApp: any(),
          scopes: any(),
          userKey: any()
        }

  defstruct [
    :anonymous,
    :clientId,
    :displayText,
    :etag,
    :kind,
    :nativeApp,
    :scopes,
    :userKey
  ]
end

defimpl Poison.Decoder, for: GoogleApi.AdminDirectory.V1.Model.Token do
  def decode(value, _options) do
    value
  end
end

defimpl Poison.Encoder, for: GoogleApi.AdminDirectory.V1.Model.Token do
  def encode(value, options) do
    GoogleApi.AdminDirectory.V1.Deserializer.serialize_non_nil(value, options)
  end
end
