# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdminDirectory.V1.Model.Building do
  @moduledoc """
  JSON template for Building object in Directory API.

  ## Attributes

  - buildingId (String.t): Unique identifier for the building. The maximum length is 100 characters. Defaults to: `null`.
  - buildingName (String.t): The building name as seen by users in Calendar. Must be unique for the customer. For example, \&quot;NYC-CHEL\&quot;. The maximum length is 100 characters. Defaults to: `null`.
  - coordinates (BuildingCoordinates): The geographic coordinates of the center of the building, expressed as latitude and longitude in decimal degrees. Defaults to: `null`.
  - description (String.t): A brief description of the building. For example, \&quot;Chelsea Market\&quot;. Defaults to: `null`.
  - etags (String.t): ETag of the resource. Defaults to: `null`.
  - floorNames ([String.t]): The display names for all floors in this building. The floors are expected to be sorted in ascending order, from lowest floor to highest floor. For example, [\&quot;B2\&quot;, \&quot;B1\&quot;, \&quot;L\&quot;, \&quot;1\&quot;, \&quot;2\&quot;, \&quot;2M\&quot;, \&quot;3\&quot;, \&quot;PH\&quot;] Must contain at least one entry. Defaults to: `null`.
  - kind (String.t): Kind of resource this is. Defaults to: `null`.
  """

  @type t :: %__MODULE__{
          buildingId: any(),
          buildingName: any(),
          coordinates: GoogleApi.AdminDirectory.V1.Model.BuildingCoordinates.t(),
          description: any(),
          etags: any(),
          floorNames: any(),
          kind: any()
        }

  defstruct [
    :buildingId,
    :buildingName,
    :coordinates,
    :description,
    :etags,
    :floorNames,
    :kind
  ]
end

defimpl Poison.Decoder, for: GoogleApi.AdminDirectory.V1.Model.Building do
  import GoogleApi.AdminDirectory.V1.Deserializer

  def decode(value, options) do
    value
    |> deserialize(
      :coordinates,
      :struct,
      GoogleApi.AdminDirectory.V1.Model.BuildingCoordinates,
      options
    )
  end
end

defimpl Poison.Encoder, for: GoogleApi.AdminDirectory.V1.Model.Building do
  def encode(value, options) do
    GoogleApi.AdminDirectory.V1.Deserializer.serialize_non_nil(value, options)
  end
end
