# Copyright 2017 Google Inc.
#
# Licensed under the Apache License, Version 2.0 (the &quot;License&quot;);
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an &quot;AS IS&quot; BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# NOTE: This class is auto generated by the swagger code generator program.
# https://github.com/swagger-api/swagger-codegen.git
# Do not edit the class manually.

defmodule GoogleApi.AdminDirectory.V1.Connection do
  @moduledoc """
  Handle Tesla connections for GoogleApi.AdminDirectory.V1.
  """

  use Tesla

  # Add any middleware here (authentication)
  plug(Tesla.Middleware.BaseUrl, "https://www.googleapis.com/admin/directory/v1")
  plug(Tesla.Middleware.Headers, %{"User-Agent" => "Elixir"})
  plug(Tesla.Middleware.EncodeJson)

  @scopes [
    # View and manage customer related information
    "https://www.googleapis.com/auth/admin.directory.customer",
    # View customer related information
    "https://www.googleapis.com/auth/admin.directory.customer.readonly",
    # View and manage your Chrome OS devices&#39; metadata
    "https://www.googleapis.com/auth/admin.directory.device.chromeos",
    # View your Chrome OS devices&#39; metadata
    "https://www.googleapis.com/auth/admin.directory.device.chromeos.readonly",
    # View and manage your mobile devices&#39; metadata
    "https://www.googleapis.com/auth/admin.directory.device.mobile",
    # Manage your mobile devices by performing administrative tasks
    "https://www.googleapis.com/auth/admin.directory.device.mobile.action",
    # View your mobile devices&#39; metadata
    "https://www.googleapis.com/auth/admin.directory.device.mobile.readonly",
    # View and manage the provisioning of domains for your customers
    "https://www.googleapis.com/auth/admin.directory.domain",
    # View domains related to your customers
    "https://www.googleapis.com/auth/admin.directory.domain.readonly",
    # View and manage the provisioning of groups on your domain
    "https://www.googleapis.com/auth/admin.directory.group",
    # View and manage group subscriptions on your domain
    "https://www.googleapis.com/auth/admin.directory.group.member",
    # View group subscriptions on your domain
    "https://www.googleapis.com/auth/admin.directory.group.member.readonly",
    # View groups on your domain
    "https://www.googleapis.com/auth/admin.directory.group.readonly",
    # View and manage notifications received on your domain
    "https://www.googleapis.com/auth/admin.directory.notifications",
    # View and manage organization units on your domain
    "https://www.googleapis.com/auth/admin.directory.orgunit",
    # View organization units on your domain
    "https://www.googleapis.com/auth/admin.directory.orgunit.readonly",
    # View and manage the provisioning of calendar resources on your domain
    "https://www.googleapis.com/auth/admin.directory.resource.calendar",
    # View calendar resources on your domain
    "https://www.googleapis.com/auth/admin.directory.resource.calendar.readonly",
    # Manage delegated admin roles for your domain
    "https://www.googleapis.com/auth/admin.directory.rolemanagement",
    # View delegated admin roles for your domain
    "https://www.googleapis.com/auth/admin.directory.rolemanagement.readonly",
    # View and manage the provisioning of users on your domain
    "https://www.googleapis.com/auth/admin.directory.user",
    # View and manage user aliases on your domain
    "https://www.googleapis.com/auth/admin.directory.user.alias",
    # View user aliases on your domain
    "https://www.googleapis.com/auth/admin.directory.user.alias.readonly",
    # View users on your domain
    "https://www.googleapis.com/auth/admin.directory.user.readonly",
    # Manage data access permissions for users on your domain
    "https://www.googleapis.com/auth/admin.directory.user.security",
    # View and manage the provisioning of user schemas on your domain
    "https://www.googleapis.com/auth/admin.directory.userschema",
    # View user schemas on your domain
    "https://www.googleapis.com/auth/admin.directory.userschema.readonly"
  ]

  @doc """
  Configure a client connection using a provided OAuth2 token as a Bearer token

  ## Parameters

  - token (String): Bearer token

  ## Returns

  Tesla.Env.client
  """
  @spec new(String.t()) :: Tesla.Env.client()
  def new(token) when is_binary(token) do
    Tesla.build_client([
      {Tesla.Middleware.Headers, %{"Authorization" => "Bearer #{token}"}}
    ])
  end

  @doc """
  Configure a client connection using a function which yields a Bearer token.

  ## Parameters

  - token_fetcher (function arity of 1): Callback which provides an OAuth2 token
    given a list of scopes

  ## Returns

  Tesla.Env.client
  """
  @spec new((list(String.t()) -> String.t())) :: Tesla.Env.client()
  def new(token_fetcher) when is_function(token_fetcher) do
    token_fetcher.(@scopes)
    |> new
  end

  @doc """
  Configure an authless client connection

  # Returns

  Tesla.Env.client
  """
  @spec new() :: Tesla.Env.client()
  def new do
    Tesla.build_client([])
  end
end
